#!/usr/bin/env ruby

require "nokogiri"
require "base64"

# This script reads an SVG file and writes out each base64 encoded
# image in the file to the given export directory

svg_file = ARGV[0] # input SVG file
export_dir = ARGV[1] || File.join(File.dirname(svg_file), "images") # directory to extract images into
svg_noimg_file = ARGV[2]  # output SVG file with raster images removed
Dir.mkdir(export_dir) unless Dir.exist?(export_dir)

doc = Nokogiri::XML.parse(File.read(svg_file))

images = doc.css("image")

images.each do |image|
  type, data = image.attributes["href"].value.split(",")
  /data:image\/(\w+);base64/.match(type) do |m|
    filename = File.join(export_dir, "#{image["id"]}.#{m[1]}")
    File.open(filename, "wb") do |f|
      f.write(Base64.decode64(data))
    end
    image.unlink
  end
end

File.open(svg_noimg_file, "wb") do |f|
  f.write(doc.to_xml)
end
